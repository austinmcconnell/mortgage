version: 2.1

workflows:
  test_and_deploy:
    jobs:
      - nox:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - test:
          name: "test_37"
          version: "3.7"
      - deploy:
          name: "deploy_testing"
          requires:
            - nox
          filters:
            tags:
              only: /^v\d+.\d+.\d+rc\d*$/
            branches:
              ignore: /.*/
          context: testing
      - deploy:
          name: "deploy_production"
          requires:
            - nox
          filters:
            tags:
              only: /^v\d+.\d+.\d+$/
            branches:
              ignore: /.*/
          context: production

executors:
  python:
    docker:
      - image: circleci/python:3.7

jobs:
  nox:
    docker:
      - image: thekevjames/nox
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run nox
          command: nox
  test:
    parameters:
      version:
        type: string
        default: latest
    executor: python
      environment:
        CC_TEST_REPORTER_ID: 2ff265eea22d20ff03ee63b761cd022679ed2bb1829dddd4020dcbff6b21dd6b
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: v1-dependencies-{{ checksum "setup.py" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e .[develop]
      - save_cache:
          key: v1-dependencies-{{ checksum "setup.py" }}
          paths:
            - ./venv
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            ./cc-test-reporter before-build
            pytest --cov mortgage --cov-report xml
            ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code $?
      - store_artifacts:
          path: test-reports
          destination: test-reports
  deploy:
    executor: python
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install twine wheel
      - run:
          name: Create Packages
          command: |
            python setup.py sdist bdist_wheel
      - run:
          name: Upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
